name: Publish AAR to GitHub Packages

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g. 0.1.0). If empty and no tag, job will fail."
        required: false
        default: ""

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      MODULE_DIR: gameworldjem

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Resolve version
        id: ver
        shell: bash
        run: |
          # Prefer tag name (refs/tags/vX.Y.Z). Fallback to manual input.
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9].* ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            echo "No tag (v*) and no manual version provided. Exiting."
            exit 1
          fi
          echo "VERSION=$VERSION" | tee -a $GITHUB_ENV
          echo "Resolved version: $VERSION"

      - name: Inject version into module build.gradle
        shell: bash
        run: |
          FILE="$MODULE_DIR/build.gradle"
          if [[ ! -f "$FILE" ]]; then
            # Try Kotlin DSL filename
            FILE_KTS="$MODULE_DIR/build.gradle.kts"
            if [[ -f "$FILE_KTS" ]]; then FILE="$FILE_KTS"; else
              echo "Could not find $MODULE_DIR/build.gradle(.kts)"
              exit 1
            fi
          fi

          echo "Patching version in: $FILE -> $VERSION"
          # Replace a line like: version = "0.1.0"
          sed -i -E 's/^(\s*version\s*=\s*)".*"/\1"'"$VERSION"'"/' "$FILE"

          echo "---- After patch ----"
          grep -nE '^\s*version\s*=' "$FILE" || true

      - name: Publish to GitHub Packages
        run: |
          ./gradlew :${MODULE_DIR}:publishReleasePublicationToGitHubPackagesRepository --no-daemon --stacktrace
        env:
          # Your build.gradle reads env first, then Gradle props.
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
